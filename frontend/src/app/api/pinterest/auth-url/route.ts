import { NextRequest, NextResponse } from 'next/server';
import { getToken } from 'next-auth/jwt';

export async function GET(request: NextRequest) {
  try {
    // Get user token from the request
    const token = await getToken({ req: request });
    if (!token) {
      return NextResponse.json({ message: 'Unauthorized' }, { status: 401 });
    }

    try {
      // Try to forward request to backend
      const apiUrl = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3001';
      const response = await fetch(`${apiUrl}/api/pinterest/auth-url`, {
        headers: {
          'Authorization': `Bearer ${token.accessToken || token.token}`,
          'Content-Type': 'application/json',
        },
      });

      // Check for successful response
      if (response.ok) {
        // Return the data from the backend
        const data = await response.json();
        return NextResponse.json(data);
      }
    } catch (fetchError) {
      console.log('Backend API fetch failed, using mock implementation:', fetchError);
    }

    // Mock implementation for when backend is not available (e.g., Vercel deployment)
    const appId = process.env.NEXT_PUBLIC_PINTEREST_APP_ID || '1518892';
    const redirectUri = process.env.NEXT_PUBLIC_PINTEREST_REDIRECT_URI ||
                       `${request.nextUrl.origin}/pinterest/callback`;

    // Generate a mock state parameter
    const state = Buffer.from(JSON.stringify({
      userId: 'mock-user',
      timestamp: Date.now()
    })).toString('base64');

    // Construct a mock Pinterest OAuth URL
    // This is just for demonstration - in a real app, this would be generated by the backend
    const mockAuthUrl = `https://www.pinterest.com/oauth/?client_id=${appId}&redirect_uri=${encodeURIComponent(redirectUri)}&response_type=code&scope=boards:read,pins:read&state=${state}`;

    return NextResponse.json({ authUrl: mockAuthUrl });
  } catch (error) {
    console.error('Error in Pinterest auth-url API route:', error);
    return NextResponse.json(
      { message: 'Error generating Pinterest authorization URL', error: (error as Error).message },
      { status: 500 }
    );
  }
}
